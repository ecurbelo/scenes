"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[218],{876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=i(n),g=a,f=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=g;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,l[1]=c;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var r=n(7896),a=(n(2784),n(876));const o={id:"getting-started",title:"Set up Scenes"},l=void 0,c={unversionedId:"getting-started",id:"getting-started",title:"Set up Scenes",description:'This topic describes how to install Scenes and create your first "Hello World" scene.',source:"@site/../docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/scenes/docs/getting-started",draft:!1,editUrl:"https://github.com/grafana/scenes/edit/main/docusaurus/website/../docs/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Set up Scenes"},sidebar:"sidebar",next:{title:"Core concepts",permalink:"/scenes/docs/core-concepts"}},s={},i=[{value:"Installation",id:"installation",level:2},{value:"Hello World scene",id:"hello-world-scene",level:2},{value:"1. Create a scene",id:"1-create-a-scene",level:3},{value:"2. Render a scene",id:"2-render-a-scene",level:3},{value:"Source code",id:"source-code",level:2}],p={toc:i},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'This topic describes how to install Scenes and create your first "Hello World" scene.'),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/grafana/plugin-tools/blob/main/packages/create-plugin/README.md"},(0,a.kt)("inlineCode",{parentName:"a"},"@grafana/create-plugin"))," to start a completely new project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @grafana/create-plugin@latest\n")),(0,a.kt)("p",null,"Alternatively, add @grafana/scenes to your Grafana app plugin by running the following command in your project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @grafana/scenes\n")),(0,a.kt)("h2",{id:"hello-world-scene"},"Hello World scene"),(0,a.kt)("p",null,'The following instructions describe how to set up the "Hello World" scene.'),(0,a.kt)("h3",{id:"1-create-a-scene"},"1. Create a scene"),(0,a.kt)("p",null,"Create your first scene using the snippet below. The following code will create a scene that contains a Grafana Text panel within a flex layout:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// helloWorldScene.ts\n\nimport { EmbeddedScene, SceneFlexLayout, SceneFlexItem, VizPanel, PanelBuilders } from '@grafana/scenes';\n\nexport function getScene() {\n  return new EmbeddedScene({\n    body: new SceneFlexLayout({\n      children: [\n        new SceneFlexItem({\n          width: '50%',\n          height: 300,\n          body: PanelBuilders.text().setTitle('Panel title').setOption('content', 'Hello world!').build(),\n        }),\n      ],\n    }),\n  });\n}\n")),(0,a.kt)("h3",{id:"2-render-a-scene"},"2. Render a scene"),(0,a.kt)("p",null,'Use the following code in your Grafana app plugin page to render the "Hello World" scene:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { getScene } from './helloWorldScene';\n\nexport const HelloWorldPluginPage = () => {\n  const scene = getScene();\n\n  return <scene.Component model={scene} />;\n};\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The rendered scene won't be rendered within Grafana plugin page. To integrate scenes with Grafana sidebar, navigation and plugin page follow ",(0,a.kt)("a",{parentName:"p",href:"/scenes/docs/scene-app"},"Scenes apps")," guide.")),(0,a.kt)("h2",{id:"source-code"},"Source code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/grafana/scenes/tree/main/docusaurus/docs/getting-started.tsx"},"View the example source code")))}u.isMDXComponent=!0}}]);