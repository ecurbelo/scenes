"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[218],{876:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),g=a,f=u["".concat(i,".").concat(g)]||u[g]||d[g]||o;return t?r.createElement(f,l(l({ref:n},p),{},{components:t})):r.createElement(f,l({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=g;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[u]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7524:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(7896),a=(t(2784),t(876));const o={id:"getting-started",title:"Set up Scenes"},l=void 0,c={unversionedId:"getting-started",id:"getting-started",title:"Set up Scenes",description:"Installation",source:"@site/../docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/scenes/docs/getting-started",draft:!1,editUrl:"https://github.com/grafana/scenes/edit/main/docusaurus/website/../docs/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Set up Scenes"},sidebar:"docs",next:{title:"Core concepts",permalink:"/scenes/docs/core-concepts"}},i={},s=[{value:"Installation",id:"installation",level:3},{value:"Hello World Scene",id:"hello-world-scene",level:2},{value:"Creating Scene",id:"creating-scene",level:3},{value:"Rendering Scene",id:"rendering-scene",level:3}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Add @grafana/scenes to your Grafana App Plugin by running the following command in your project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @grafana/scenes\n")),(0,a.kt)("p",null,"Or use Scene App template to start from scratch: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/grafana/scenes-app-template/generate"},"Create new Scene App")),(0,a.kt)("h2",{id:"hello-world-scene"},"Hello World Scene"),(0,a.kt)("h3",{id:"creating-scene"},"Creating Scene"),(0,a.kt)("p",null,"Create your first Scene using the snippet below. The following code will create a Scene that contains Grafana Text panel within a flex layout."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// helloWorldScene.ts\n\nimport { EmbeddedScene, SceneFlexLayout, SceneFlexItem, VizPanel } from '@grafana/scenes';\n\nfunction getScene() {\n  return new EmbeddedScene({\n    body: new SceneFlexLayout({\n      children: [\n        new SceneFlexItem({\n          width: '50%',\n          height: 300,\n          body: new VizPanel({\n            title: 'Hello world panel',\n            pluginId: 'text',\n            options: {\n              content: 'Hello world! ',\n            },\n          }),\n        }),\n      ],\n    }),\n  });\n}\n")),(0,a.kt)("h3",{id:"rendering-scene"},"Rendering Scene"),(0,a.kt)("p",null,"Use the following code in your Grafana App Plugin page to render the Hello World scene:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { getScene } from './helloWorldScene';\n\nexport const GrafanaAppPluginPage = () => {\n  const scene = getScene();\n\n  return <scene.Component model={scene} />;\n};\n")))}d.isMDXComponent=!0}}]);