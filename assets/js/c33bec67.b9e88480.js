"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40],{876:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>h});var a=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},v=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(t),v=r,h=u["".concat(s,".").concat(v)]||u[v]||p[v]||i;return t?a.createElement(h,o(o({ref:n},l),{},{components:t})):a.createElement(h,o({ref:n},l))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=v;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:r,o[1]=c;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}v.displayName="MDXCreateElement"},389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(7896),r=(t(2784),t(876));const i={id:"advanced-activation-handlers",title:"Activation handlers"},o=void 0,c={unversionedId:"advanced-activation-handlers",id:"advanced-activation-handlers",title:"Activation handlers",description:"Activation handlers are useful tool for providing external behaviors to scene objects. When a scene object is mounted, activation handlers are called.",source:"@site/../docs/advanced-activation-handlers.md",sourceDirName:".",slug:"/advanced-activation-handlers",permalink:"/scenes/docs/advanced-activation-handlers",draft:!1,editUrl:"https://github.com/grafana/scenes/edit/main/docusaurus/website/../docs/advanced-activation-handlers.md",tags:[],version:"current",frontMatter:{id:"advanced-activation-handlers",title:"Activation handlers"},sidebar:"sidebar",previous:{title:"Custom scene objects",permalink:"/scenes/docs/advanced-custom-scene-objects"},next:{title:"Data and time range in custom scene object",permalink:"/scenes/docs/advanced-data"}},s={},d=[{value:"Adding activation handler",id:"adding-activation-handler",level:2},{value:"Step 1. Create a scene",id:"step-1-create-a-scene",level:3},{value:"Step 2. Add activation handler",id:"step-2-add-activation-handler",level:3},{value:"Step 3. Return deactivation handler",id:"step-3-return-deactivation-handler",level:3}],l={toc:d},u="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Activation handlers are useful tool for providing external behaviors to scene objects. When a scene object is mounted, activation handlers are called."),(0,r.kt)("p",null,"Activation handlers, similar to React's ",(0,r.kt)("inlineCode",{parentName:"p"},"useEffect"),", return a function(deactivation handler), that should be used to clean up all behaviors added in activation handler. Deactivation handler is called when a scene object is unmounted."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Activation handlers are especially usefull if you want to add external behaviors to core scene objects. They reduce a need for implementing custom scene objects that would handle scene objects connections.")),(0,r.kt)("h2",{id:"adding-activation-handler"},"Adding activation handler"),(0,r.kt)("h3",{id:"step-1-create-a-scene"},"Step 1. Create a scene"),(0,r.kt)("p",null,"Start with creating a scene that renders a single timeseries panel:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const queryRunner = new SceneQueryRunner({\n  datasource: {\n    type: 'prometheus',\n    uid: '<PROVIDE_GRAFANA_DS_UID>',\n  },\n  queries: [\n    {\n      refId: 'A',\n      range: true,\n      format: 'time_series',\n      expr: 'rate(prometheus_http_requests_total{handler=\"$handler\"}[5m])',\n    },\n  ],\n});\n\nconst scene = new EmbeddedScene({\n  $timeRange: new SceneTimeRange(),\n  controls: [new SceneTimePicker({ isOnCanvas: true }), new SceneRefreshPicker({ isOnCanvas: true })],\n  body: new SceneFlexLayout({\n    direction: 'column',\n    children: [\n      new SceneFlexItem({\n        minWidth: '70%',\n        body: new VizPanel({\n          pluginId: 'timeseries',\n          title: 'Dynamic height and width',\n          $data: queryRunner,\n        }),\n      }),\n    ],\n  }),\n});\n")),(0,r.kt)("h3",{id:"step-2-add-activation-handler"},"Step 2. Add activation handler"),(0,r.kt)("p",null,"Add activation handler to SceneQueryRunner that subscribe to state changes and log current state. Keep in mind that subscription to state will not be created until SceneQueryRunner is activated:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"queryRunner.addActivationHandler(() => {\n  const sub = queryRunner.subscribeToState((state) => {\n    console.log('queryRunner state', state);\n  });\n});\n")),(0,r.kt)("h3",{id:"step-3-return-deactivation-handler"},"Step 3. Return deactivation handler"),(0,r.kt)("p",null,"From the activation handler, return a function that will unsubscribe from ",(0,r.kt)("inlineCode",{parentName:"p"},"queryRunner")," state changes when object is de-activated:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"queryRunner.addActivationHandler(() => {\n  const sub = queryRunner.subscribeToState((state) => {\n    console.log('queryRunner state', state);\n  });\n\n  // Return deactivation handler\n  return () => {\n    sub.unsubscribe();\n  };\n});\n")))}p.isMDXComponent=!0}}]);