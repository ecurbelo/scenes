"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[358],{876:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>g});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),m=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=m(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(t),p=a,g=u["".concat(s,".").concat(p)]||u[p]||d[p]||o;return t?r.createElement(g,i(i({ref:n},l),{},{components:t})):r.createElement(g,i({ref:n},l))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var m=2;m<o;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var r=t(7896),a=(t(2784),t(876));const o={id:"advanced-time-range-comparison",title:"Time range comparison"},i=void 0,c={unversionedId:"advanced-time-range-comparison",id:"advanced-time-range-comparison",title:"Time range comparison",description:"Scenes come with SceneTimeRangeCompare object that allows running a SceneQueryRunner queries with a time range that is different from the one provided by SceneTimeRange object. With SceneTimeRangeCompare object you can set what comparison time window you want your queries to be performed against. This allows data from a second time range to be shown on a visualization.",source:"@site/../docs/advanced-time-range-comparison.md",sourceDirName:".",slug:"/advanced-time-range-comparison",permalink:"/scenes/docs/advanced-time-range-comparison",draft:!1,editUrl:"https://github.com/grafana/scenes/edit/main/docusaurus/website/../docs/advanced-time-range-comparison.md",tags:[],version:"current",frontMatter:{id:"advanced-time-range-comparison",title:"Time range comparison"},sidebar:"sidebar",previous:{title:"Custom data sources",permalink:"/scenes/docs/advanced-custom-datasource"}},s={},m=[{value:"Use <code>SceneTimeRangeCompare</code> in a Scene",id:"use-scenetimerangecompare-in-a-scene",level:2},{value:"Customize style of a comparison series",id:"customize-style-of-a-comparison-series",level:2},{value:"Source code",id:"source-code",level:2}],l={toc:m},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Scenes come with ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimeRangeCompare")," object that allows running a ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneQueryRunner")," queries with a time range that is different from the one provided by ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimeRange")," object. With ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimeRangeCompare")," object you can set what comparison time window you want your queries to be performed against. This allows data from a second time range to be shown on a visualization."),(0,a.kt)("h2",{id:"use-scenetimerangecompare-in-a-scene"},"Use ",(0,a.kt)("inlineCode",{parentName:"h2"},"SceneTimeRangeCompare")," in a Scene"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a scene with time range and query runner")),(0,a.kt)("p",null,"Start by creating a scene that contains a ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimeRange")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneQueryRunner"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const queryRunner = new SceneQueryRunner({\n  datasource: {\n    type: 'prometheus',\n    uid: 'gdev-prometheus',\n  },\n  queries: [\n    {\n      refId: 'A',\n      expr: 'rate(prometheus_http_requests_total{}[5m])',\n    },\n  ],\n});\n\nconst scene = new EmbeddedScene({\n  $data: queryRunner,\n  $timeRange: new SceneTimeRange({ from: 'now-5m', to: 'now' }),\n  body: new SceneFlexLayout({\n    direction: 'row',\n    children: [\n      new SceneFlexItem({\n        width: '50%',\n        height: 300,\n        body: PanelBuilders.timeseries().setTitle('Panel using global time range').build(),\n      }),\n    ],\n  }),\n});\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Add time picker to scene controls")),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimePicker")," object to display and control time range of a scene:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const scene = new EmbeddedScene({\n  $data: queryRunner,\n  $timeRange: new SceneTimeRange({ from: 'now-5m', to: 'now' }),\n  controls: [new SceneTimePicker({})]\n  body: new SceneFlexLayout({\n    direction: 'row',\n    children: [\n      new SceneFlexItem({\n        width: '50%',\n        height: 300,\n        body: PanelBuilders.timeseries().setTitle('Panel using global time range').build(),\n      }),\n    ],\n  }),\n});\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Add time window comparison picker to scene controls")),(0,a.kt)("p",null,"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimeRangeCompare")," scene object and add it next to ",(0,a.kt)("inlineCode",{parentName:"p"},"SceneTimePicker")," in scene's controls:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const scene = new EmbeddedScene({\n  $data: queryRunner,\n  $timeRange: new SceneTimeRange({ from: 'now-5m', to: 'now' }),\n  controls: [new SceneTimePicker({}), new SceneTimeRangeCompare({})],\n  body: new SceneFlexLayout({\n    direction: 'row',\n    children: [\n      new SceneFlexItem({\n        width: '100%',\n        height: '100%',\n        body: PanelBuilders.timeseries().setTitle('Panel using global time range').build(),\n      }),\n    ],\n  }),\n});\n")),(0,a.kt)("p",null,"A time frame comparison picker should be shown next to time range picker. Enable time range comparison by clicking on the ",(0,a.kt)("strong",{parentName:"p"},"Time frame comparison")," checkbox and pick time window to compare the currently selected time range with."),(0,a.kt)("h2",{id:"customize-style-of-a-comparison-series"},"Customize style of a comparison series"),(0,a.kt)("p",null,"You can customize the style of a comparison series rendered on a visualization by ",(0,a.kt)("a",{parentName:"p",href:"/scenes/docs/visualizations#step-7-configure-overrides"},"configuring overrides"),". Use ",(0,a.kt)("inlineCode",{parentName:"p"},"matchComparisonQuery(queryRefId: string)")," matcher to target comparison query results:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const queryRunner = new SceneQueryRunner({\n  datasource: {\n    type: 'prometheus',\n    uid: 'gdev-prometheus',\n  },\n  queries: [\n    {\n      refId: 'MyQuery',\n      expr: 'rate(prometheus_http_requests_total{}[5m])',\n    },\n  ],\n});\n\nconst panelShowingComparisonSeries = PanelBuilders.timeseries()\n  .setData(queryRunner)\n  .setOverrides((b) =>\n    b.matchComparisonQuery('MyQuery').overrideColor({\n      mode: 'fixed',\n      fixedColor: 'red',\n    })\n  );\n")),(0,a.kt)("h2",{id:"source-code"},"Source code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/grafana/scenes/tree/main/docusaurus/docs/advanced-time-range-comparison.tsx"},"View the example source code")))}d.isMDXComponent=!0}}]);